package cn.com.choicesoft.view;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.database.Cursor;
import android.graphics.Color;
import android.util.Log;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.*;
import cn.com.choicesoft.R;
import cn.com.choicesoft.activity.ChioceActivity;
import cn.com.choicesoft.activity.Eatables;
import cn.com.choicesoft.adapter.EatableSubGridViewAdapter;
import cn.com.choicesoft.adapter.FujiaGridAdapter;
import cn.com.choicesoft.bean.Addition;
import cn.com.choicesoft.bean.Food;
import cn.com.choicesoft.util.ListProcessor;
import cn.com.choicesoft.util.ToastUtil;
import cn.com.choicesoft.util.ValueUtil;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * 必选附加项/产品
 * Created by M.c on 2014/8/26.
 */
public class MustFuJiaView implements View.OnClickListener, AdapterView.OnItemClickListener {
    private Food food;
    private Activity activity;
    private Button confirm,remove;
    private List<FujiaGridAdapter> subGridViewAdapterLists;
    private LinearLayout linearTCDetails;//套餐详情的内布局
    private boolean clickDel=false;
    private Dialog dialog;
    private View view;
    private MustCallBack mustCB;

    public MustFuJiaView(Food food, Activity activity,View view) {
        this.food = food;
        this.activity = activity;
        this.view=view;
    }

    public MustFuJiaView(Food food, Activity activity,View view,MustCallBack mustCB) {
        this.food = food;
        this.activity = activity;
        this.view=view;
        this.mustCB=mustCB;
    }


    public void showView(){
        LinearLayout layout=(LinearLayout)activity.getLayoutInflater().inflate(R.layout.must_fujia_layout,null);
        confirm=(Button)layout.findViewById(R.id.eatable_tcdetail_btn_certain);
        remove=(Button) layout.findViewById(R.id.eatable_tcdetail_btn_cancel);
        confirm.setOnClickListener(this);
        remove.setOnClickListener(this);
        linearTCDetails=(LinearLayout)layout.findViewById(R.id.eatable_linear_tcdetails);
        dialog = new Dialog(activity,R.style.edittext_dialog);
        dialog.setContentView(layout);
        dialog.setCanceledOnTouchOutside(false);
        dialog.show();
        iniData();
    }
    public void iniData(){
        subGridViewAdapterLists=new ArrayList<FujiaGridAdapter>();
        String sql="select PRODUCTTC_ORDER from FoodFuJia where PCODE =? \n" +
                "      and isMust=1 and (rgrp =\"\" or rgrp like '%rgrp%') and maxcnt>0 \n" +
                "      and PRODUCTTC_ORDER not like '%PRODUCTTC_ORDER%' \n" +
                "      AND PRODUCTTC_ORDER is not null\n" +
                "      and defualts=0";
        List<String> orderList=new ListProcessor().query(sql,new String[]{food.getPcode()},activity, new ListProcessor.Result<List<String>>() {
            @Override
            public List<String> handle(Cursor c) {
                List<String> result=new ArrayList<String>();
                while (c.moveToNext()){
                    result.add(c.getString(0));
                }
                return result;
            }
        });
        for(String code:orderList) {
            String fj = "select INIT,PCODE,FCODE as FOODFUJIA_ID,FNAME AS FOODFUJIA_DES,\n" +
                    "       Fprice as FOODFUJIA_CHECKED,'false' as ISSELECTED,\n" +
                    "              MAXCNT,MINCNT,PRODUCTTC_ORDER,DEFUALTS,ISADDPROD,\n" +
                    "                     ISMUST from FoodFuJia where PCODE =? \n" +
                    "                     and isMust=1\n" +
                    "                     and PRODUCTTC_ORDER =? order by DEFUALTS";
            List<Addition> additionList = new ListProcessor().query(fj, new String[]{food.getPcode(),code}, activity, Addition.class);
            if(additionList.size() > 1) {
                FujiaGridAdapter subGridAdapter = new FujiaGridAdapter(activity, additionList);
                Addition defaultS = subGridAdapter.getDefaultsAddition();

                LinearLayout tcTopGroupLayout = new LinearLayout(activity);
                tcTopGroupLayout.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                tcTopGroupLayout.setOrientation(LinearLayout.HORIZONTAL);
                // 附加项明细 ↓↓↓
                TcGridView tcGridView = new TcGridView(activity);
                if(ChioceActivity.ispad) {
                    tcGridView.setNumColumns(5);
                }else {
                    tcGridView.setNumColumns(3);
                }
                tcGridView.setDrawSelectorOnTop(true);
                tcGridView.setVerticalSpacing(5);
                tcGridView.setHorizontalSpacing(5);
                tcGridView.setBackgroundColor(Color.parseColor("#ADD8E6"));
                tcGridView.setSelector(R.color.transparent);
                tcGridView.setAdapter(subGridAdapter);
                tcGridView.setOnItemClickListener(this);
                // 附加项分组信息↓↓↓
                TextView tcGroupTv = new TextView(activity);
                tcGroupTv.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                tcGroupTv.setTextColor(Color.BLACK);
                tcGroupTv.setText(defaultS.getFoodFuJia_des() + "    ");//附加项分组名

                TextView tcGroupMinCntTv = new TextView(activity);
                tcGroupMinCntTv.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                tcGroupMinCntTv.setTextColor(Color.BLACK);
                tcGroupMinCntTv.setText(ValueUtil.isNotEmpty(defaultS.getMinCnt())?defaultS.getMinCnt()+"――":"0" +"――");

                TextView tcGroupMaxCntTv = new TextView(activity);
                tcGroupMaxCntTv.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                tcGroupMaxCntTv.setTextColor(Color.BLACK);
                tcGroupMaxCntTv.setText(ValueUtil.isNotEmpty(defaultS.getMaxCnt())?defaultS.getMaxCnt()+" :  " : "  : ");

                TextView tcCountsChoosedTv = new TextView(activity);
                tcCountsChoosedTv.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
                tcCountsChoosedTv.setTag("tcCountsChoosedTv"+defaultS.getFoodFuJia_Id());
                tcCountsChoosedTv.setTextColor(Color.BLACK);
                tcCountsChoosedTv.setText("0");
                subGridViewAdapterLists.add(subGridAdapter);

                ImageView mImageView = new ImageView(activity);
                mImageView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 20));
                mImageView.setBackgroundColor(Color.parseColor("#FFFFFF"));

                tcTopGroupLayout.addView(tcGroupTv);
                tcTopGroupLayout.addView(tcGroupMinCntTv);
                tcTopGroupLayout.addView(tcGroupMaxCntTv);
                tcTopGroupLayout.addView(tcCountsChoosedTv);

                linearTCDetails.addView(tcTopGroupLayout);
                linearTCDetails.addView(tcGridView);
                linearTCDetails.addView(mImageView);
            }
        }
    }
    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.eatable_tcdetail_btn_certain://确定
                certain();
                break;
            case R.id.eatable_tcdetail_btn_cancel://删除
                clickDel=true;
                break;
            default:
                break;
        }
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        FujiaGridAdapter adapter=(FujiaGridAdapter)parent.getAdapter();
        Addition addition=adapter.getDefaultsAddition();//附加分组
        Addition posA= (Addition) adapter.getItem(position);//点击的附加项
        if(clickDel){//删除按钮事件
            TextView tcCountsChoosedTv = (TextView) ((LinearLayout) view.getParent().getParent()).findViewWithTag("tcCountsChoosedTv" + addition.getFoodFuJia_Id());
            tcCountsChoosedTv.setText(adapter.getCountsAboutPcount()!=0?adapter.getCountsAboutPcount()-ValueUtil.isNaNofInteger(posA.getPcount())+"":"0");
            posA.setPcount("0");
            posA.setSelected(false);
            adapter.notifyDataSetChanged();
            clickDel=false;
            return;
        }
        if(ValueUtil.isNaNofDouble(addition.getMaxCnt())>adapter.getCountsAboutPcount()){
            if(ValueUtil.isNaNofDouble(posA.getMaxCnt())>=ValueUtil.isNaNofInteger(posA.getPcount()+1)) {
                posA.setPcount((ValueUtil.isNaNofInteger(posA.getPcount())+1)+"");
                TextView tcCountsChoosedTv = (TextView) ((LinearLayout) view.getParent().getParent()).findViewWithTag("tcCountsChoosedTv" + addition.getFoodFuJia_Id());
                tcCountsChoosedTv.setText(adapter.getCountsAboutPcount() + "");
                adapter.notifyDataSetChanged();
            }else{
                ToastUtil.toast(activity,R.string.fujia_count_error);
            }
        }else{
            ToastUtil.toast(activity,R.string.fujia_typ_count_error);
        }
    }

    public void certain(){
        StringBuffer fName=new StringBuffer();
        StringBuffer fPrice=new StringBuffer();
        StringBuffer fcode=new StringBuffer();
        StringBuffer fcount=new StringBuffer();
        for(FujiaGridAdapter adapter:subGridViewAdapterLists){
            if(adapter.getCountsAboutPcount()>=ValueUtil.isNaNofInteger(adapter.getDefaultsAddition().getMinCnt())){
                for(Addition addition:adapter.getSelectedAdditionLists()){
                    fName.append(addition.getFoodFuJia_des()).append("!");
                    fPrice.append(addition.getFoodFuJia_checked()).append("!");
                    fcode.append(addition.getFoodFuJia_Id()).append("!");
                    fcount.append(addition.getPcount()).append("!");
                }
            }else{
                ToastUtil.toast(activity,R.string.fujia_not_end);
                return;
            }
        }
        food.setFujiaprice(food.getFujiaprice() == null ? fPrice.toString() : food.getFujiaprice() + fPrice.toString());
        food.setFujiacode(food.getFujiacode() == null ? fcode.toString() : food.getFujiacode() + fcode.toString());
        food.setFujianame(food.getFujianame() == null ? fName.toString() : food.getFujianame() + fName.toString());
        food.setFujiacount(food.getFujiacount() == null ? fcount.toString() : food.getFujiacount() + fcount.toString());
        if(mustCB==null) {
            ((Eatables) activity).foodOrder(food, view);
        }else{
            mustCB.execute();
        }
        if(dialog!=null){
            dialog.dismiss();
        }
    }

    public interface MustCallBack{
        void execute();
    }
}
